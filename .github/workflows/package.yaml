---
name: Build Packages

on:
  push:
    branches:
      - main
      - package_build
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:

      - name: Print Go version and environment
        id: vars
        run: |
          printf "Using go at: $(which go)\n"
          printf "Go version: $(go version)\n"
          printf "\n\nGo environment:\n\n"
          go env
          printf "\n\nSystem environment:\n\n"
          env
          echo "::set-output name=version_tag::${GITHUB_REF/refs\/tags\//}"
          echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
          echo "::set-output name=date_str::$(date +%Y%m%d%H%M)"
          # Add "pip install" CLI tools to PATH
          echo ~/.local/bin >> $GITHUB_PATH
          # Parse semver
          TAG=${GITHUB_REF/refs\/tags\//}
          SEMVER_RE='[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z\.-]*\)'
          TAG_MAJOR=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\1#"`
          TAG_MINOR=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\2#"`
          TAG_PATCH=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\3#"`
          TAG_SPECIAL=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\4#"`
          echo "::set-output name=tag_major::${TAG_MAJOR}"
          echo "::set-output name=tag_minor::${TAG_MINOR}"
          echo "::set-output name=tag_patch::${TAG_PATCH}"
          echo "::set-output name=tag_special::${TAG_SPECIAL}"

      - name: Set Version
        run: |
          if [[ $GITHUB_REF_TYPE == "branch" ]]; then
            echo "::set-output name=package_version::${date_str}_${short_sha}"
          else
            echo "::set-output name=package_version::${version_tag}"
          fi

      - uses: actions/checkout@v3
        with:
          ref: package_build

      - name: install-dependencies
        run: sudo apt update && sudo apt -y install make pkg-config rubygems && sudo gem install fpm

      - name: runx
        run: |
          git branch
          ls -l

      - name: build-binary
        run: make

      - name: build-debian
        run: |
         fpm -s dir -t deb -n coraza-spoa -v ${{ steps.vars.outputs.package_version }} \
           --config-files /etc/coraza-spoa/config.yaml
           --description "Coraza HAProxy SPOA" \
           --url "https://www.coraza.io" \
           --deb-systemd ./contrib/coraza-spoa.service \
           --deb-systemd-enable \
           --after-install ./contrib/coraza-spoa.postinst \
           --maintainer "OWASP Coraza Team" \
           --license Apache-2.0 \
           --vendor OWASP \
           ./coraza-spoa=/usr/bin/coraza-spoa \
           ./doc/config/=/usr/share/doc/coraza-spoa/haproxy-config \
           ./LICENSE=/usr/share/doc/coraza-spoa/ \
           ./config.yaml.default=/etc/coraza-spoa/config.yaml

           #      ## Publish to the "testing" repo
           #      - name: cloudsmith/debian/testing
           #        id: cloudsmith-debian-testing
           #        uses: cloudsmith-io/action@master
           #        with:
           #          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
           #          command: "push"
           #          format: "deb"
           #          owner: "ono"               # Your Cloudsmith account name or org name (namespace)
           #          repo: "coraza-spoa"        # Your Cloudsmith Repository name (slug)
           #          distro: "any-distro"       # Your Distribution  (i.e Debian, Ubuntu)
           #          release: "testing"         # Your Distribution Release (i.e xenial, buster)
           #          republish: "true"          # needed ONLY if version is not changing
           #          file: "YOUR-FILENAME.deb"  # debian package filename
           #
           #      ## Publish tags to the "release" repo
           #      - name: cloudsmith/debian/release
           #        if: ${{ steps.vars.outputs.tag_special != '' }}
           #        id: cloudsmith-debian-release
           #        uses: cloudsmith-io/action@master
           #        with:
           #          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
           #          command: "push"
           #          format: "deb"
           #          owner: "ono"               # Your Cloudsmith account name or org name (namespace)
           #          repo: "coraza-spoa"        # Your Cloudsmith Repository name (slug)
           #          distro: "any-distro"       # Your Distribution  (i.e Debian, Ubuntu)
           #          release: "release"         # Your Distribution Release (i.e xenial, buster)
           #          republish: "true"          # needed ONLY if version is not changing
           #          file: "YOUR-FILENAME.deb"  # debian package filename

      #- name: cloudsmith/rpm
      #  id: cloudsmith-rpm
      #  uses: cloudsmith-io/action@master
      #  with:
      #    api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
      #    command: "push"
      #    format: "rpm"
      #    owner: "ono"               # Your Cloudsmith account name or org name (namespace)
      #    repo: "coraza-spoa"        # Your Cloudsmith Repository name (slug)
      #    distro: "any-distro"       # Your Distribution  (i.e el, fedora)
      #    release: "any-distro"      # Your Distribution Release (i.e 7, 32)
      #    republish: "true"          # needed ONLY if version is not changing
      #    file: "YOUR-FILENAME.rpm"  #rpm package filename
